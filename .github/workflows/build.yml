# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5] #, 3.6, 3.7, 3.8, 3.9]
        ansible-version: [2.9.18] #, 2.10.7]

    steps:
    - uses: actions/checkout@v2

    - name: OS, users and ssh requirements
      run: |
        sudo apt update
        sudo DEBIAN_FRONTEND=noninteractive apt install -y openssh-server openssh-client

        sudo ssh-keygen -A
        sudo sh -c 'echo "\nPubkeyAuthentication yes\n\nAuthorizedKeysFile	.ssh/authorized_keys\n" >> /etc/ssh/sshd_config'
        sudo sh -c 'echo "\n   StrictHostKeyChecking no\n" >> /etc/ssh/ssh_config'
        sudo systemctl restart ssh

        echo "#########################"
        sudo sshd -T
        echo "#########################"

        id
        cat /etc/passwd


        mkdir -p /home/runner/.ssh
        ssh-keygen -q -N "" -f /home/runner/.ssh/id_rsa
        ls -larth /home/runner/.ssh/
        cp /home/runner/.ssh/id_rsa.pub /home/runner/.ssh/authorized_keys
        sudo cp /home/runner/.ssh/id_rsa.pub /etc/ssh/ssh_known_hosts
        chmod 640 /home/runner/.ssh/authorized_keys
        sudo chown root:root /etc/ssh/ssh_known_hosts
        sudo chmod 644 /etc/ssh/ssh_known_hosts

        echo "########### ls -la /home/runner/.ssh/ #############"

        ls -la /home/runner/.ssh/

        echo "######### /home/runner/.ssh/id_rsa ###############"

        cat /home/runner/.ssh/id_rsa
        echo "########### /home/runner/.ssh/authorized_keys #############"
        cat /home/runner/.ssh/authorized_keys
        echo "########################"


        echo "########################"
        echo "########## SSH ##############"


        ssh -vvv 127.0.0.1 "id"

        echo "########## end of SSH ##############"

        exit 1



        echo -e 'passwordsuper\npasswordsuper' | sudo adduser chaos --shell /bin/bash
        echo -e 'passwordsuper\npasswordsuper' | sudo adduser chaossudopasswd --shell /bin/bash
        sudo sudo -u chaos ssh-keygen -q -N "" -f /home/chaos/.ssh/id_rsa
        mkdir -p ~/.ssh
        sudo ls -la /home/chaos/.ssh/
        sudo ls -la /home/runner/.ssh/
        sudo cp -rf /home/chaos/.ssh/id_rsa /home/chaos/.ssh/id_rsa.pub /home/runner/.ssh/
        sudo chown -R runner:docker /home/runner/.ssh/
        chmod 400 /home/runner/.ssh/id_rsa
        chmod 640 /home/runner/.ssh/id_rsa.pub
        cp /home/runner/.ssh/id_rsa.pub /home/runner/.ssh/authorized_keys
        chmod 400 /home/runner/.ssh/authorized_keys
        sudo sudo -u chaos cp /home/chaos/.ssh/id_rsa.pub /home/chaos/.ssh/authorized_keys
        sudo sudo -u chaossudopasswd mkdir /home/chaossudopasswd/.ssh
        sudo cp /home/chaos/.ssh/id_rsa.pub /home/chaossudopasswd/.ssh/authorized_keys
        sudo chown -R chaossudopasswd: /home/chaossudopasswd/.ssh/authorized_keys
        sudo chmod 640 /home/chaossudopasswd/.ssh/authorized_keys
        sudo sh -c 'echo "chaos ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/chaos'
        sudo sh -c 'echo "chaossudopasswd ALL=(ALL) ALL" > /etc/sudoers.d/chaossudopasswd'

    - name: Debug host github actions 2
      run: |
        sudo -u chaos ssh 127.0.0.1 "id"
        ssh -vvv chaos@127.0.0.1 "id"
        ssh -vvv 127.0.0.1 "id"
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up ansible ${{ matrix.ansible-version}}
      run: python -m pip install ansible==${{ matrix.ansible-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pylama
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with pylama
      run: |
        pylama --ignore C901  chaosansible/
        
    - name: Test with pytest
      run: |
        pytest .

    - name: Run chaos with ansible test
      run: |
        chaos run chaos-integration-tests/withoutbecomepasswd.json

    

        

  